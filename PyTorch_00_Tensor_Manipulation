{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","toc_visible":true,"authorship_tag":"ABX9TyOOsoew7caYsLbpZBvpWqEA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["**PyTorch Setup**"],"metadata":{"id":"4TXLD4AzAa_i"}},{"cell_type":"code","source":["import torch\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","print(torch.__version__)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GsBjo2xgAsZN","executionInfo":{"status":"ok","timestamp":1747166455839,"user_tz":-120,"elapsed":7826,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"1671359b-d2a8-4e3b-944f-e86b653e0899"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2.6.0+cu124\n"]}]},{"cell_type":"markdown","source":["## Introduction to Tensors\n","\n","### Creating Tensors\n","\n","PyTorch tensors are created using `torch.Tensor()`\n","\n"],"metadata":{"id":"iyYlzl-JD1It"}},{"cell_type":"code","source":["# scalar\n","scalar = torch.tensor(7)\n","scalar"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"07kk2ARVEX-h","executionInfo":{"status":"ok","timestamp":1747080228485,"user_tz":-120,"elapsed":54,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"ba3d1213-b372-4627-d133-86e9edc15c70"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(7)"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["scalar.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F5Tdk4FqFqt9","executionInfo":{"status":"ok","timestamp":1747080231003,"user_tz":-120,"elapsed":2,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"54544deb-9e0d-4584-cda4-6c58cadbc349"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Get tensor back as Python int\n","scalar.item()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D3wWhQ0mGB4q","executionInfo":{"status":"ok","timestamp":1747080232185,"user_tz":-120,"elapsed":12,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"dd819342-4721-4071-af48-1ba43078cbc2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Vector\n","vector = torch.tensor([7,7])\n","vector"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nWxwGOtMGX8X","executionInfo":{"status":"ok","timestamp":1747080306371,"user_tz":-120,"elapsed":6,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"9c8d8928-28b2-4990-84a2-cd2d2a1533e9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([7, 7])"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["vector.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjnY4HzAGi-F","executionInfo":{"status":"ok","timestamp":1747080333363,"user_tz":-120,"elapsed":18,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"39b4cffe-59fa-4d3d-9e33-b0a29f25cd17"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["vector.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y8dq0B1eGyh3","executionInfo":{"status":"ok","timestamp":1747080394931,"user_tz":-120,"elapsed":11,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"7509bc24-3e74-4cba-bb6e-1b1c3ddfde33"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([2])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# MATRIX\n","MATRIX = torch.tensor([[7,8], [9,10]])\n","MATRIX"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dmiLDIWVG358","executionInfo":{"status":"ok","timestamp":1747080459252,"user_tz":-120,"elapsed":12,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"50390f74-e707-4212-81c4-5e716a64afb8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[ 7,  8],\n","        [ 9, 10]])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["MATRIX.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ppGk-ScDHINq","executionInfo":{"status":"ok","timestamp":1747080486225,"user_tz":-120,"elapsed":16,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"7909aa6a-97a8-4dcc-acab-8070efb7d2d4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["MATRIX[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oCWyhbq_HKXW","executionInfo":{"status":"ok","timestamp":1747080496930,"user_tz":-120,"elapsed":160,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"9fd7bdf2-2343-4974-975c-a08f713b3e9d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([7, 8])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["MATRIX.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JLUAtAZOHQUk","executionInfo":{"status":"ok","timestamp":1747080518359,"user_tz":-120,"elapsed":6,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"3b4e20e1-d2b4-498d-c25e-983617c426e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([2, 2])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# TENSOR\n","TENSOR = torch.tensor([[[1,2,3],[3,6,9],[2,4,5]]])\n","TENSOR.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cpdqnJSzHY9f","executionInfo":{"status":"ok","timestamp":1747080632848,"user_tz":-120,"elapsed":14,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"b408fbba-9a9a-4317-ec66-2b8ddd68d01b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([1, 3, 3])"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["### Random Tensors\n","\n","Random tensors are important because the way many neural networks learn is that they start with tensors full of random numbers and then adjust those random numbers to better represent the data.\n","\n","`Start with random numbers -> look at data -> update random numbers -> look at data -> update random numbers`"],"metadata":{"id":"K0EI_QBZEmL9"}},{"cell_type":"code","source":["# Create a random tensor of size (1,3,4)\n","random_tensor = torch.rand(1,3,4)\n","random_tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3h13CM27FPd1","executionInfo":{"status":"ok","timestamp":1747147194633,"user_tz":-120,"elapsed":6,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"1a09b8e1-3fe5-48d6-ff41-4cbde6397201"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[[0.7288, 0.9353, 0.2677, 0.2901],\n","         [0.4044, 0.4667, 0.4281, 0.1243],\n","         [0.3974, 0.5244, 0.1398, 0.2414]]])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["random_tensor.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JtjUEIHYFhsu","executionInfo":{"status":"ok","timestamp":1747147242781,"user_tz":-120,"elapsed":45,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"a19af5dd-aece-4b98-95d8-a71f6c0e9f32"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Create a random tensor with similar shape to an image tensor\n","random_image_size_tensor = torch.rand(224, 224, 3) # height, width, colour channels (R,G,B)\n","random_image_size_tensor.shape, random_image_size_tensor.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mkareKAPGJ9M","executionInfo":{"status":"ok","timestamp":1747147627631,"user_tz":-120,"elapsed":13,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"3889f44f-7aa0-4a7b-d62b-7eb3e11e2cd3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(torch.Size([224, 224, 3]), 3)"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["### Zeros and Ones"],"metadata":{"id":"ayIZmgBRHZet"}},{"cell_type":"code","source":["# Create a tensor of all zeros\n","zeros = torch.zeros(size=(3,4))\n","zeros"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w4G_PKK8He1f","executionInfo":{"status":"ok","timestamp":1747147708806,"user_tz":-120,"elapsed":23,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"9bb3534d-266e-4f16-e509-2707e903d216"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0., 0., 0., 0.],\n","        [0., 0., 0., 0.],\n","        [0., 0., 0., 0.]])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Create a tensor of all ones\n","ones = torch.ones(size=(3,4))\n","ones"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XbbvBcGEHutN","executionInfo":{"status":"ok","timestamp":1747147797105,"user_tz":-120,"elapsed":13,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"9a5b228a-f032-49ee-d521-a9980a53d60d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[1., 1., 1., 1.],\n","        [1., 1., 1., 1.],\n","        [1., 1., 1., 1.]])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["ones.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"76l38tlfH-81","executionInfo":{"status":"ok","timestamp":1747147818550,"user_tz":-120,"elapsed":19,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"2db5b65c-909d-42c8-8400-1ea6339c8548"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.float32"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["### Create a range of tensors and tensors-like"],"metadata":{"id":"-cSuG_rlIUmn"}},{"cell_type":"code","source":[" # Use torch.arange()\n"," one_to_ten = torch.arange(1,11, 1)\n"," one_to_ten"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I-ToK66eIXoy","executionInfo":{"status":"ok","timestamp":1747148092657,"user_tz":-120,"elapsed":5,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"bc3bcb2a-5121-4463-f39d-7f67a3a3dd07"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Creating tensors like\n","ten_zeros = torch.zeros_like(input=one_to_ten)\n","ten_zeros"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b5m9-icjJJab","executionInfo":{"status":"ok","timestamp":1747148137592,"user_tz":-120,"elapsed":7,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"0fedbb73-94d7-44d0-9d8a-771655bd39ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["### Tensor Datatypes"],"metadata":{"id":"PIIVfdaSJpRs"}},{"cell_type":"code","source":["# Float 32 tensor - \"What datatype is the tensor? CPU or CUDA? Should we track the gradients?\n","float_32_tensor = torch.tensor([3.0, 6.0, 9.0], dtype=None, device=None, requires_grad=False)\n","float_32_tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cVl-n18eJsEp","executionInfo":{"status":"ok","timestamp":1747148835483,"user_tz":-120,"elapsed":5,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"b998a0c6-62df-40e4-a78f-8906ce258c0e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([3., 6., 9.])"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["float_32_tensor.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8dxTU0tlJ-Mu","executionInfo":{"status":"ok","timestamp":1747148868089,"user_tz":-120,"elapsed":6,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"b380a50d-4b52-4ce0-8149-57cebce54e4f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.float32"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["float_16_tensor = float_32_tensor.type(torch.float16)\n","float_16_tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GlEIb_BeL6cO","executionInfo":{"status":"ok","timestamp":1747148870512,"user_tz":-120,"elapsed":26,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"f438fef6-3cb7-485a-97b8-5c5a176e8004"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([3., 6., 9.], dtype=torch.float16)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["float_16_tensor * float_32_tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xg1u55qHM8l5","executionInfo":{"status":"ok","timestamp":1747149130277,"user_tz":-120,"elapsed":11,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"6918acd9-6385-4ee9-f577-543454d01d65"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([ 9., 36., 81.])"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["int_32_tensor = torch.tensor([3, 6, 9], dtype=torch.int32)\n","int_32_tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kk7la_VtNRqE","executionInfo":{"status":"ok","timestamp":1747149215849,"user_tz":-120,"elapsed":9,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"fa33d8b0-e249-40a2-f948-f6026ccc4755"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([3, 6, 9], dtype=torch.int32)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["float_32_tensor * int_32_tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bTlWH-4FNXO7","executionInfo":{"status":"ok","timestamp":1747149234840,"user_tz":-120,"elapsed":17,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"284e242e-c948-491e-9f35-095e868b1178"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([ 9., 36., 81.])"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["### Getting information from tensors\n","\n","1.   Data type: `tensor.dtype`\n","2.   Shape: `tensor.shape`\n","3.   Device: `tensor.device`\n","\n"],"metadata":{"id":"spL7UAK_NsIU"}},{"cell_type":"code","source":["# Create a tensor\n","some_tensor = torch.rand(3,4)\n","some_tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jTMG9zG-OW2h","executionInfo":{"status":"ok","timestamp":1747149510679,"user_tz":-120,"elapsed":15,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"505e5196-9c21-432c-b3e2-919b9b11e19b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0.2224, 0.4281, 0.0021, 0.5540],\n","        [0.1419, 0.9473, 0.9540, 0.6705],\n","        [0.3796, 0.7245, 0.4870, 0.2981]])"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Find out some details about some tensor\n","print(f\"Datatype of tensor: {some_tensor.dtype}\")\n","print(f\"Shape of tensor: {some_tensor.shape}\")\n","print(f\"Device tensor is on: {some_tensor.device}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0PhxTJUIOeGQ","executionInfo":{"status":"ok","timestamp":1747149612475,"user_tz":-120,"elapsed":20,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"a51c66bc-9669-4638-ff2e-75448359e258"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Datatype of tensor: torch.float32\n","Shape of tensor: torch.Size([3, 4])\n","Device tensor is on: cpu\n"]}]},{"cell_type":"markdown","source":["### Manipulating Tensors (tensor operations)\n","\n","Tensor operations include:\n","* Addition\n","* Subtraction\n","* Multiplication (element-wise)\n","* Division\n","* Matrix multiplication"],"metadata":{"id":"AZUn1jP7Txwe"}},{"cell_type":"code","source":["# Create a tensor and add 10 to it\n","tensor = torch.tensor([1,2,3])\n","tensor + 10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nW1Hg_D6T6Rj","executionInfo":{"status":"ok","timestamp":1747151020757,"user_tz":-120,"elapsed":14,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"22674653-3f65-490d-c794-f9327910c9f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([11, 12, 13])"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# Multiply tensor by 10\n","tensor = tensor * 10\n","tensor"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3qHUdu6aURZ5","executionInfo":{"status":"ok","timestamp":1747151063682,"user_tz":-120,"elapsed":9,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"e11b2045-eb6f-4ad5-ad64-4b8182f2cffe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([10, 20, 30])"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["# Subtract 10\n","tensor - 10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SE3pgKzBUiwo","executionInfo":{"status":"ok","timestamp":1747151121458,"user_tz":-120,"elapsed":9,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"9a40c280-0c90-4cc9-eb2e-f8f361c3b2e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([ 0, 10, 20])"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["# Element-wise multiplication\n","a = torch.tensor([1,2,3])\n","b = torch.tensor([2, -1,5])\n","a * b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4CbF2ehnU-oL","executionInfo":{"status":"ok","timestamp":1747151273791,"user_tz":-120,"elapsed":13,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"2c7bd640-10b2-46f7-f82c-ad0547cbb54d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([ 2, -2, 15])"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# Matrix Multiplication\n","a = torch.rand(1,3)\n","b = torch.rand(3,1)\n","print(a)\n","print(b)\n","print(torch.matmul(a,b))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKhhasJCVNze","executionInfo":{"status":"ok","timestamp":1747151549359,"user_tz":-120,"elapsed":10,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"61bd40c8-0db2-474c-ce40-fbd56a2bf127"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0.4455, 0.7073, 0.1507]])\n","tensor([[0.0220],\n","        [0.9756],\n","        [0.8766]])\n","tensor([[0.8319]])\n"]}]},{"cell_type":"code","source":["# More Matrix Multiplication, transpose a matrix\n","a = torch.tensor([[1,2],\n","                  [3,4],\n","                  [5,6]])\n","b = torch.tensor([[1,5],\n","                  [2,2],\n","                  [-1,3]])\n","c = torch.matmul(a,b.T)\n","print(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PJODjsaNXm3b","executionInfo":{"status":"ok","timestamp":1747152678900,"user_tz":-120,"elapsed":12,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"b5df7ec0-a9b9-41b0-d89a-b4f95cdb6324"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[11,  6,  5],\n","        [23, 14,  9],\n","        [35, 22, 13]])\n"]}]},{"cell_type":"markdown","source":["### Tensor aggregation (finding the min, max, mean, sum, etc)"],"metadata":{"id":"6FcoyxTcaQbN"}},{"cell_type":"code","source":["# Find the min\n","c.min()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FgIx88ELaVYE","executionInfo":{"status":"ok","timestamp":1747152715505,"user_tz":-120,"elapsed":7,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"01887bb2-9a90-437b-8dc9-1179f77f3986"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(5)"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# Find the max\n","c.max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Q6I3vK0atQC","executionInfo":{"status":"ok","timestamp":1747152747206,"user_tz":-120,"elapsed":48,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"9e6c93da-a5a7-455b-8d88-a7e013bb85c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(35)"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["# Find the mean\n","c.type(torch.float32).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nyLTr9_Va1Nl","executionInfo":{"status":"ok","timestamp":1747152837742,"user_tz":-120,"elapsed":12,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"3c5b0738-5328-40a2-bb3a-c6aef75ca0e3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(15.3333)"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["# Sum the elements\n","c.sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K3hU1bnldAaw","executionInfo":{"status":"ok","timestamp":1747153333032,"user_tz":-120,"elapsed":6,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"b1be291f-ec2c-40ad-fcdf-1265220b4b17"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(138)"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["# Returns the index of the min\n","c.argmin()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UEavOOytdclD","executionInfo":{"status":"ok","timestamp":1747153458069,"user_tz":-120,"elapsed":21,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"bb507bed-730d-445f-897d-881bb16e4b64"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(2)"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["# Returns the index of the max\n","c.argmax()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2uzO7sZCdoTN","executionInfo":{"status":"ok","timestamp":1747153501889,"user_tz":-120,"elapsed":10,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"fec095c1-4286-46d8-a07c-ef2032f74709"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(6)"]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["## Reshaping, stacking, squeezing and unsqueezing tensors\n","\n","* Reshaping - reshapes an input tensor to a defined shape\n","* View - return a view of an input tensor of a certain shape, but keep the same memory as the original tensor\n","* Stacking - combine multiple tensors on top of each other (vstack) or side by side (hstack)\n","* Squeeze - removes all `1` dimensions from a tensor\n","* Unsqueeze - add a `1` dimension to a target tensor\n","* Permute - return a view of the input with dimensions permuted (swapped) in a certain way"],"metadata":{"id":"cmtzdyOqfcD3"}},{"cell_type":"code","source":["x = torch.arange(1,10)\n","x, x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PdCz8WJ3gS-G","executionInfo":{"status":"ok","timestamp":1747154393294,"user_tz":-120,"elapsed":21,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"709961e3-7064-4faa-878f-87ca40c11579"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(tensor([1, 2, 3, 4, 5, 6, 7, 8, 9]), torch.Size([9]))"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["# Add an extra dimension\n","x_reshaped = x.reshape(1,9)\n","x_reshaped, x_reshaped.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rywawBUagfqW","executionInfo":{"status":"ok","timestamp":1747154394435,"user_tz":-120,"elapsed":11,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"6eb8dced-a052-4332-a35d-3e507b4849d3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(tensor([[1, 2, 3, 4, 5, 6, 7, 8, 9]]), torch.Size([1, 9]))"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["# Change the view - changing z changes x\n","z = x.view(1,9)\n","z, z.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VIMtNd0ghKE_","executionInfo":{"status":"ok","timestamp":1747154438097,"user_tz":-120,"elapsed":8,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"cb008c8f-f335-4f6a-bfaf-8254b70b41c4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(tensor([[1, 2, 3, 4, 5, 6, 7, 8, 9]]), torch.Size([1, 9]))"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["# Stack tensors on top of each other\n","x_stacked = torch.hstack([x,x,x,x])\n","x_stacked"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FKWbPIpzhtUt","executionInfo":{"status":"ok","timestamp":1747154668718,"user_tz":-120,"elapsed":12,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"915d0b50-a285-40c1-d750-b8c71066d7ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6,\n","        7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":76}]},{"cell_type":"markdown","source":["### Reproducibility (trying to take random out of random)\n","\n","In short how a neural network learns:\n","`start with random numbers -> tensor operations -> update random numbers to try and make them better representations of the data -> again -> again -> again...`\n","\n","To reduce the randomness in neural networks and PyThorc comes the concept of a **random seed**.\n","\n","Essentially what the random seed does is \"flavour\" the randomness."],"metadata":{"id":"3pvO_qnpLmVt"}},{"cell_type":"code","source":["# Create two random tensors\n","a = torch.rand(3,4)\n","b = torch.rand(3,4)\n","print(a)\n","print(b)\n","print(a==b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W4pSeCbcMYcN","executionInfo":{"status":"ok","timestamp":1747165822074,"user_tz":-120,"elapsed":102,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"6d8d22f2-366e-4a87-8b43-24321ec4f498"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0.0648, 0.5943, 0.0862, 0.9599],\n","        [0.0151, 0.3924, 0.9359, 0.2662],\n","        [0.5853, 0.5749, 0.3437, 0.1197]])\n","tensor([[0.3106, 0.1459, 0.7390, 0.1998],\n","        [0.0758, 0.8969, 0.8108, 0.8298],\n","        [0.8035, 0.9325, 0.6666, 0.3914]])\n","tensor([[False, False, False, False],\n","        [False, False, False, False],\n","        [False, False, False, False]])\n"]}]},{"cell_type":"code","source":["# Let's make some random but reproducible tensors\n","\n","# Set the random seed\n","RANDOM_SEED = 42\n","torch.manual_seed(RANDOM_SEED)\n","c = torch.rand(3,4)\n","torch.manual_seed(RANDOM_SEED)\n","d = torch.rand(3,4)\n","\n","print(c)\n","print(d)\n","print(c==d)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"POKsaeJdM-07","executionInfo":{"status":"ok","timestamp":1747166037365,"user_tz":-120,"elapsed":4,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"de9ee3fe-0c55-4a25-8a0a-ef3e720873d0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0.8823, 0.9150, 0.3829, 0.9593],\n","        [0.3904, 0.6009, 0.2566, 0.7936],\n","        [0.9408, 0.1332, 0.9346, 0.5936]])\n","tensor([[0.8823, 0.9150, 0.3829, 0.9593],\n","        [0.3904, 0.6009, 0.2566, 0.7936],\n","        [0.9408, 0.1332, 0.9346, 0.5936]])\n","tensor([[True, True, True, True],\n","        [True, True, True, True],\n","        [True, True, True, True]])\n"]}]},{"cell_type":"markdown","source":["### Running PyTorch and tensors on GPUs\n","\n","\n","\n","1.   Use Google Colab\n","2.   Use your own GPU\n","3.   Use cloud computing\n"],"metadata":{"id":"mBJt9c9WOMgs"}},{"cell_type":"code","source":["!nvidia-smi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1g0du8krPISF","executionInfo":{"status":"ok","timestamp":1747166474022,"user_tz":-120,"elapsed":106,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"f44af97d-bcb6-43e4-82c3-dd7480042f1d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Tue May 13 20:01:14 2025       \n","+-----------------------------------------------------------------------------------------+\n","| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |\n","|-----------------------------------------+------------------------+----------------------+\n","| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n","|                                         |                        |               MIG M. |\n","|=========================================+========================+======================|\n","|   0  Tesla T4                       Off |   00000000:00:04.0 Off |                    0 |\n","| N/A   43C    P8              9W /   70W |       0MiB /  15360MiB |      0%      Default |\n","|                                         |                        |                  N/A |\n","+-----------------------------------------+------------------------+----------------------+\n","                                                                                         \n","+-----------------------------------------------------------------------------------------+\n","| Processes:                                                                              |\n","|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n","|        ID   ID                                                               Usage      |\n","|=========================================================================================|\n","|  No running processes found                                                             |\n","+-----------------------------------------------------------------------------------------+\n"]}]},{"cell_type":"code","source":["### Check for GPU access with PyTorch"],"metadata":{"id":"3DO6rl9NPQ4b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["torch.cuda.is_available()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nkrso-BWPZAw","executionInfo":{"status":"ok","timestamp":1747166557291,"user_tz":-120,"elapsed":11,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"84716c90-6156-4df9-d743-dedd1edc1394"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Setup device agnostic code\n","device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n","device"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"s4RUheCNPrmg","executionInfo":{"status":"ok","timestamp":1747166637445,"user_tz":-120,"elapsed":12,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"b1fc5852-497b-4ef2-8a3f-ac2bf930c3ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'cuda'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Count number of devices\n","torch.cuda.device_count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HkJ5OrXcP2I8","executionInfo":{"status":"ok","timestamp":1747166669488,"user_tz":-120,"elapsed":24,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"a21eb65f-27ec-4d42-b86c-9cc4b2ce138d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Create a tensor (default on the CPU)\n","a = torch.tensor([1,2,3])\n","print(a.device)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"54US7YqvQaND","executionInfo":{"status":"ok","timestamp":1747166918960,"user_tz":-120,"elapsed":10,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"58e6f57d-8e26-4577-efa6-00408db2742e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["cpu\n"]}]},{"cell_type":"code","source":["# Move tensor to GPU (if available)\n","b = a.to(device)\n","print(a.device)\n","print(b.device)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qBzwLF5lQm9b","executionInfo":{"status":"ok","timestamp":1747166920908,"user_tz":-120,"elapsed":310,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"45380fac-63b5-4e79-bdaa-73d5d880bebd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["cpu\n","cuda:0\n"]}]},{"cell_type":"code","source":["# Move tensor to CPU so it can transform to NumPy\n","c = b.cpu()\n","print(c.device)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pFlehE8kRi4q","executionInfo":{"status":"ok","timestamp":1747167182019,"user_tz":-120,"elapsed":10,"user":{"displayName":"Silvio Zylfi","userId":"15547149178764215863"}},"outputId":"92ba82b6-0b27-4da3-ec35-6d18991f4ed9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["cpu\n"]}]}]}